/*
Gapstone is a Go binding for the Capstone disassembly library. For examples,
try reading the *_test.go files.

	Library Author: Nguyen Anh Quynh
	Binding Author: Ben Nagy
	License: BSD style - see LICENSE file for details
    (c) 2013 COSEINC. All Rights Reserved.

    THIS FILE WAS AUTO-GENERATED -- DO NOT EDIT!
	Command: ./genconst /home/hsp/Code/capstone/bindings/python/capstone/
	2019-02-15T21:36:20+01:00

*/

package gapstone

// #cgo LDFLAGS: -lcapstone
// #cgo freebsd CFLAGS: -I/usr/local/include
// #cgo freebsd LDFLAGS: -L/usr/local/lib
// #include <stdlib.h>
// #include <capstone/capstone.h>
import "C"

// For Capstone Engine. AUTO-GENERATED FILE, DO NOT EDIT [mos65xx_const.py]
const (
	MOS65XX_REG_INVALID = C.MOS65XX_REG_INVALID
	MOS65XX_REG_ACC     = C.MOS65XX_REG_ACC
	MOS65XX_REG_X       = C.MOS65XX_REG_X
	MOS65XX_REG_Y       = C.MOS65XX_REG_Y
	MOS65XX_REG_P       = C.MOS65XX_REG_P
	MOS65XX_REG_SP      = C.MOS65XX_REG_SP
	MOS65XX_REG_ENDING  = C.MOS65XX_REG_ENDING
)

const (
	MOS65XX_AM_NONE = C.MOS65XX_AM_NONE
	MOS65XX_AM_IMP  = C.MOS65XX_AM_IMP
	MOS65XX_AM_ACC  = C.MOS65XX_AM_ACC
	MOS65XX_AM_ABS  = C.MOS65XX_AM_ABS
	MOS65XX_AM_ZP   = C.MOS65XX_AM_ZP
	MOS65XX_AM_IMM  = C.MOS65XX_AM_IMM
	MOS65XX_AM_ABSX = C.MOS65XX_AM_ABSX
	MOS65XX_AM_ABSY = C.MOS65XX_AM_ABSY
	MOS65XX_AM_INDX = C.MOS65XX_AM_INDX
	MOS65XX_AM_INDY = C.MOS65XX_AM_INDY
	MOS65XX_AM_ZPX  = C.MOS65XX_AM_ZPX
	MOS65XX_AM_ZPY  = C.MOS65XX_AM_ZPY
	MOS65XX_AM_REL  = C.MOS65XX_AM_REL
	MOS65XX_AM_IND  = C.MOS65XX_AM_IND
)

const (
	MOS65XX_INS_INVALID = C.MOS65XX_INS_INVALID
	MOS65XX_INS_ADC     = C.MOS65XX_INS_ADC
	MOS65XX_INS_AND     = C.MOS65XX_INS_AND
	MOS65XX_INS_ASL     = C.MOS65XX_INS_ASL
	MOS65XX_INS_BCC     = C.MOS65XX_INS_BCC
	MOS65XX_INS_BCS     = C.MOS65XX_INS_BCS
	MOS65XX_INS_BEQ     = C.MOS65XX_INS_BEQ
	MOS65XX_INS_BIT     = C.MOS65XX_INS_BIT
	MOS65XX_INS_BMI     = C.MOS65XX_INS_BMI
	MOS65XX_INS_BNE     = C.MOS65XX_INS_BNE
	MOS65XX_INS_BPL     = C.MOS65XX_INS_BPL
	MOS65XX_INS_BRK     = C.MOS65XX_INS_BRK
	MOS65XX_INS_BVC     = C.MOS65XX_INS_BVC
	MOS65XX_INS_BVS     = C.MOS65XX_INS_BVS
	MOS65XX_INS_CLC     = C.MOS65XX_INS_CLC
	MOS65XX_INS_CLD     = C.MOS65XX_INS_CLD
	MOS65XX_INS_CLI     = C.MOS65XX_INS_CLI
	MOS65XX_INS_CLV     = C.MOS65XX_INS_CLV
	MOS65XX_INS_CMP     = C.MOS65XX_INS_CMP
	MOS65XX_INS_CPX     = C.MOS65XX_INS_CPX
	MOS65XX_INS_CPY     = C.MOS65XX_INS_CPY
	MOS65XX_INS_DEC     = C.MOS65XX_INS_DEC
	MOS65XX_INS_DEX     = C.MOS65XX_INS_DEX
	MOS65XX_INS_DEY     = C.MOS65XX_INS_DEY
	MOS65XX_INS_EOR     = C.MOS65XX_INS_EOR
	MOS65XX_INS_INC     = C.MOS65XX_INS_INC
	MOS65XX_INS_INX     = C.MOS65XX_INS_INX
	MOS65XX_INS_INY     = C.MOS65XX_INS_INY
	MOS65XX_INS_JMP     = C.MOS65XX_INS_JMP
	MOS65XX_INS_JSR     = C.MOS65XX_INS_JSR
	MOS65XX_INS_LDA     = C.MOS65XX_INS_LDA
	MOS65XX_INS_LDX     = C.MOS65XX_INS_LDX
	MOS65XX_INS_LDY     = C.MOS65XX_INS_LDY
	MOS65XX_INS_LSR     = C.MOS65XX_INS_LSR
	MOS65XX_INS_NOP     = C.MOS65XX_INS_NOP
	MOS65XX_INS_ORA     = C.MOS65XX_INS_ORA
	MOS65XX_INS_PHA     = C.MOS65XX_INS_PHA
	MOS65XX_INS_PLA     = C.MOS65XX_INS_PLA
	MOS65XX_INS_PHP     = C.MOS65XX_INS_PHP
	MOS65XX_INS_PLP     = C.MOS65XX_INS_PLP
	MOS65XX_INS_ROL     = C.MOS65XX_INS_ROL
	MOS65XX_INS_ROR     = C.MOS65XX_INS_ROR
	MOS65XX_INS_RTI     = C.MOS65XX_INS_RTI
	MOS65XX_INS_RTS     = C.MOS65XX_INS_RTS
	MOS65XX_INS_SBC     = C.MOS65XX_INS_SBC
	MOS65XX_INS_SEC     = C.MOS65XX_INS_SEC
	MOS65XX_INS_SED     = C.MOS65XX_INS_SED
	MOS65XX_INS_SEI     = C.MOS65XX_INS_SEI
	MOS65XX_INS_STA     = C.MOS65XX_INS_STA
	MOS65XX_INS_STX     = C.MOS65XX_INS_STX
	MOS65XX_INS_STY     = C.MOS65XX_INS_STY
	MOS65XX_INS_TAX     = C.MOS65XX_INS_TAX
	MOS65XX_INS_TAY     = C.MOS65XX_INS_TAY
	MOS65XX_INS_TSX     = C.MOS65XX_INS_TSX
	MOS65XX_INS_TXA     = C.MOS65XX_INS_TXA
	MOS65XX_INS_TXS     = C.MOS65XX_INS_TXS
	MOS65XX_INS_TYA     = C.MOS65XX_INS_TYA
	MOS65XX_INS_ENDING  = C.MOS65XX_INS_ENDING
)

const (
	MOS65XX_GRP_INVALID         = C.MOS65XX_GRP_INVALID
	MOS65XX_GRP_JUMP            = C.MOS65XX_GRP_JUMP
	MOS65XX_GRP_CALL            = C.MOS65XX_GRP_CALL
	MOS65XX_GRP_RET             = C.MOS65XX_GRP_RET
	MOS65XX_GRP_IRET            = C.MOS65XX_GRP_IRET
	MOS65XX_GRP_BRANCH_RELATIVE = C.MOS65XX_GRP_BRANCH_RELATIVE
	MOS65XX_GRP_ENDING          = C.MOS65XX_GRP_ENDING
)

const (
	MOS65XX_OP_INVALID = C.MOS65XX_OP_INVALID
	MOS65XX_OP_REG     = C.MOS65XX_OP_REG
	MOS65XX_OP_IMM     = C.MOS65XX_OP_IMM
	MOS65XX_OP_MEM     = C.MOS65XX_OP_MEM
)
